group_by(competition) %>%
arrange(desc(points))
decathlon %>%
select(distinct(athlete,competition))
decathlon %>%
distinct(athlete) %>%
group_by(competition) %>%
summarise(highest_points = max(points)) %>%
arrange(competition)
decathlon %>%
select(distinct(athlete), competition) %>%
group_by(competition) %>%
summarise(highest_points = max(points)) %>%
arrange(competition)
decathlon %>%
select(distinct("athlete"), "competition") %>%
group_by(competition) %>%
summarise(highest_points = max(points)) %>%
arrange(competition)
decathlon %>%
group_by(competition) %>%
summarise(highest_points = max(points)) %>%
arrange(competition)
decathlon %>%
select(athlete, competition)
decathlon %>%
distinct(athlete, competition)
decathlon %>%
distinct(athlete, competition) %>%
group_by(competition)
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(count(competition))
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(n_distinct(competition))
View(decathlon)
decathlon %>%
distinct(athlete)
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(n_distinct(competition))
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(n_distinct(competition))
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(n_distinct(competition)) %>%
filter(n_distinct(competition) > 1)
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(n_distinct(competition)) %>%
filter(n_distinct > 1)
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(n_distinct(competition))
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
filter(summarise(n_distinct(competition)) >1)
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(n_distinct(competition)) %>%
filter(n_distinct > 1)
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(n_distinct(competition))
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(competitions = n_distinct(competition)) %>%
arrange()
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(competitions_played = n_distinct(competition)) %>%
arrange()
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(competitions_played = n_distinct(competition)) %>%
arrange(desc())
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(competitions_played = n_distinct(competition)) %>%
arrange(desc(competitions_played))
decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(competitions_played = n_distinct(competition)) %>%
arrange(desc(competitions_played)) %>%
filter(competitions_played > 1)
double_comp_athletes <- decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(competitions_played = n_distinct(competition)) %>%
arrange(desc(competitions_played)) %>%
filter(competitions_played > 1) %>%
pull(athlete)
double_comp_athletes <- decathlon %>%
distinct(athlete, competition) %>%
group_by(athlete) %>%
summarise(competitions_played = n_distinct(competition)) %>%
arrange(desc(competitions_played)) %>%
filter(competitions_played > 1) %>%
pull(athlete)
as.list(double_comp_athletes)
for (athlete_name in double_comp_athletes) {
decathlon %>%
filter(athlete == "athlete_name") %>%
group_by(competition)
}
decathlon %>%
filter(athlete == "barras") %>%
group_by(competition) %>%
summarise()
decathlon %>%
filter(athlete == "barras") %>%
distinct(competition) %>%
summarise()
decathlon %>%
filter(athlete == "barras") %>%
distinct(competition)
decathlon %>%
filter(athlete == "barras") %>%
select(competition, points)
decathlon %>%
filter(athlete == "barras") %>%
distinct(competition, points)
decathlon %>%
filter(athlete == "barras") %>%
distinct(competition, points) %>%
summarise(sum(points))
library(tidyverse)
library(here)
library(tidyverse)
library(here)
decathlon <- read_csv(here("clean_data/decathlon_cleaned.csv"))
decathlon %>% distinct(sport)
decathlon %>%
filter(sport == "long_jump") %>%
arrange(desc(score_metres_seconds)) %>%
head(1)
decathlon %>%
filter(sport == "x100m") %>%
group_by(competition) %>%
summarise(average_100m = round(mean(score_metres_seconds), digits =2))
View(decathlon)
decathlon %>%
group_by(athlete) %>%
summarise(sum(points))
decathlon %>%
group_by(athlete) %>%
summarise(total_points = arrange(desc(sum(points))))
decathlon %>%
group_by(athlete) %>%
summarise(total_points = sum(points))
decathlon %>%
group_by(athlete) %>%
summarise(total_points = sum(points)) %>%
arrange(desc(total_points))
decathlon %>%
group_by(athlete) %>%
summarise(total_points = sum(points)) %>%
arrange(desc(total_points)) %>%
head(1)
decathlon %>%
select(distinct(athlete,competition))
decathlon %>%
select(distinct(athlete)) %>%
group_by(competition) %>%
arrange(desc(points))
decathlon %>%
select(athlete, competition) %>%
group_by(competition) %>%
arrange(desc(points))
decathlon %>%
select(athlete, competition) %>%
group_by(competition) #
decathlon %>%
group_by(competition)
decathlon %>%
group_by(competition) %>%
arrange(desc(score_metres_seconds))
decathlon %>%
arrange(desc(score_metres_seconds)) %>%
group_by(competition)
decathlon %>%
group_by(competition)
decathlon %>%
group_by(competition) %>%
summarise(arrange(desc(score_metres_seconds)))
decathlon %>%
group_by(competition) %>%
slice_max(score_metres_seconds)
decathlon %>%
group_by(competition) %>%
slice_max(score_metres_seconds, n=3)
decathlon %>%
group_by(competition) %>%
slice_max(score_metres_seconds, n=3)
decathlon %>%
group_by(competition) %>%
slice_max(points, n=3)
decathlon %>%
group_by(competition) %>%
summarise(max.col(points))
decathlon %>%
group_by(competition) %>%
summarise(max(points))
decathlon %>%
group_by(competition) %>%
summarise(max(points), n=3)
decathlon %>%
group_by(competition) %>%
summarise((max(points), n=3))
decathlon %>%
group_by(competition) %>%
arrange(desc(points))
decathlon %>%
group_by(competition, points) %>%
arrange(desc(points))
decathlon %>%
group_by(competition) %>%
arrange(desc(points))
decathlon %>%
group_by(competition) %>%
arrange(desc(points)) %>%
head(3)
decathlon %>%
group_by(competition) %>%
arrange(desc(points)) %>%
summarise(head(3))
decathlon %>%
group_by(competition) %>%
arrange(desc(points)) %>%
summarise(max(points))
decathlon %>%
group_by(competition) %>%
arrange(desc(points)) %>%
head(3)
decathlon %>%
arrange(desc(points)) %>%
group_by(competition)
decathlon %>%
arrange(desc(points)) %>%
group_by(competition)
decathlon %>%
arrange(desc(points)) %>%
group_by(points)
decathlon %>%
arrange(desc(points)) %>%
select(distinct(points))
decathlon %>%
arrange(desc(points)) %>%
select(distinct("points"))
decathlon %>%
arrange(desc(points)) %>%
distinct("points")
decathlon %>%
arrange(desc(points)) %>%
distinct(points)
decathlon %>%
arrange(desc(points)) %>%
unique(points)
decathlon %>%
arrange(desc(points)) %>%
distinct(c(athlete, competition, points))
decathlon %>%
arrange(desc(points)) %>%
distinct(c("athlete", "competition", "points"))
decathlon %>%
arrange(desc(points)) %>%
distinct("athlete", "competition", "points")
decathlon %>%
arrange(desc(points)) %>%
distinct(athlete, competition, points)
decathlon %>%
arrange(desc(points)) %>%
distinct(athlete, competition, points) %>%
group_by(competition)
decathlon %>%
arrange(desc(points)) %>%
distinct(athlete, competition, points) %>%
group_by(competition) %>%
summarise(slice_max(points, n = 3))
decathlon %>%
arrange(desc(points)) %>%
distinct(athlete, competition, points) %>%
group_by(competition) %>%
summarise(max(points, n = 3))
decathlon %>%
distinct(athlete, competition, points) %>%
group_by(competition) %>%
summarise(max(points, n = 3))
decathlon %>%
distinct(athlete, competition, points) %>%
group_by(competition) %>%
arrange(desc(points))
decathlon %>%
distinct(athlete, competition, points) %>%
group_by(competition) %>%
arrange(desc(points)) %>%
head(3)
decathlon %>%
distinct(athlete, competition, points) %>%
group_by(competition) %>%
arrange(desc(points)) %>%
summarise_all(head(3))
decathlon %>%
distinct(athlete, competition, points) %>%
group_by(competition) %>%
arrange(desc(points)) %>%
summarise_all(max(points))
decathlon %>%
distinct(athlete, competition, points) %>%
group_by(competition, athlete, points) %>%
arrange(desc(points))
decathlon %>%
distinct(athlete, competition, points) %>%
group_by(competition) %>%
arrange(desc(points))
decathlon %>%
group_by(competition) %>%
filter(sport == "shot_put")
decathlon %>%
group_by(competition) %>%
filter(sport == "shot_put") %>%
arrange(desc(points))
decathlon %>%
group_by(competition) %>%
filter(sport == "shot_put" & rank == 1) %>%
arrange(desc(points)) %>%
decathlon %>%
group_by(competition) %>%
filter(sport == "shot_put" & rank == 1) %>%
arrange(desc(points))
decathlon %>%
group_by(competition) %>%
filter(sport == "shot_put" & rank == c(1,2,3) %>%
arrange(desc(points))
decathlon %>%
group_by(competition) %>%
filter(sport == "shot_put" & rank == c(1,2,3)) %>%
arrange(desc(points))
decathlon %>%
group_by(competition) %>%
filter(sport == "shot_put" & rank == 1:3) %>%
arrange(desc(points))
decathlon %>%
group_by(competition) %>%
filter(sport == "shot_put" & rank == 1 | 2 |3) %>%
arrange(desc(points))
decathlon %>%
group_by(competition) %>%
filter(sport == "shot_put" & rank %in% c(1, 2, 3) %>%
arrange(desc(points))
decathlon %>%
group_by(competition) %>%
filter(sport == "shot_put" & rank %in% c(1, 2, 3)) %>%
arrange(desc(points))
decathlon %>%
group_by(competition) %>%
filter(sport == "shot_put" & rank %in% c(1, 2, 3)) %>%
arrange(desc(points))
View(decathlon)
decathlon %>%
group_by(competition) %>%
filter(sport == "shot_put" & rank %in% c(1, 2, 3)) %>%
arrange(desc(points))
library(tidyverse)
library(here)
decathlon <- read_csv(here("clean_data/decathlon_cleaned.csv"))
decathlon %>% distinct(sport)
# select the long_jump entry with the highest "score".
decathlon %>%
filter(sport == "long_jump") %>%
arrange(desc(score_metres_seconds)) %>%
head(1)
# Get the average 100m time in each competition
decathlon %>%
filter(sport == "x100m") %>%
group_by(competition) %>%
summarise(average_100m = round(mean(score_metres_seconds), digits =2))
# For each athlete, count the total number of points, then select the highest
decathlon %>%
group_by(athlete) %>%
summarise(total_points = sum(points)) %>%
arrange(desc(total_points)) %>%
head(1)
decathlon %>%
group_by(competition) %>%
filter(sport == "shot_put" & rank %in% c(1, 2, 3)) %>%
arrange(desc(points))
decathlon %>%
filter(sport == "x400m")
decathlon %>%
filter(sport == "x400m" & score_metres_seconds < 50.00)
decathlon %>%
filter(sport == "x400m" & score_metres_seconds < 50.00) %>%
summarise(avg_<50s = mean(score_metres_seconds))
decathlon %>%
filter(sport == "x400m" & score_metres_seconds < 50.00) %>%
summarise(avg_less50s = mean(score_metres_seconds))
decathlon %>%
filter(sport == "x400m" & score_metres_seconds < 50.00) %>%
summarise(avg_less50s = mean(points)))
decathlon %>%
filter(sport == "x400m" & score_metres_seconds < 50.00) %>%
summarise(avg_less50s = mean(points))
decathlon %>%
filter(sport == "x400m" & score_metres_seconds < 50.00) #%>%
# summarise(avg_less50s = mean(points))
decathlon %>%
filter(sport == "x400m" & score_metres_seconds < 50.00) %>%
summarise(avg_less50s = mean(points))
decathlon %>%
filter(sport == "x400m" & score_metres_seconds < 50.00) %>%
summarise(avg_less50s = mean(points)) %>%
pull(avg_less50s)
decathlon %>%
filter(sport == "x400m" & score_metres_seconds < 50.00) %>%
summarise(avg_less_50s = mean(points)) %>%
pull(avg_less_50s)
decathlon %>%
filter(sport == "x400m" & score_metres_seconds > 50.00) %>%
summarise(avg_more_50s = mean(points)) %>%
pull(avg_more_50s)
decathlon %>%
filter(sport == "x400m" & score_metres_seconds < 50.00) %>%
summarise(avg_less_50s = round(mean(points)) %>%
pull(avg_less_50s)
decathlon %>%
decathlon %>%
filter(sport == "x400m" & score_metres_seconds < 50.00) %>%
summarise(avg_less_50s = round(mean(points), digits = 0) %>%
pull(avg_less_50s)
decathlon %>%
decathlon %>%
filter(sport == "x400m" & score_metres_seconds < 50.00) %>%
summarise(avg_less_50s = round(mean(points), digits = 0)) %>%
pull(avg_less_50s)
decathlon %>%
filter(sport == "x400m" & score_metres_seconds > 50.00) %>%
summarise(avg_more_50s = mean(points)) %>%
pull(avg_more_50s)
decathlon %>%
filter(sport == "x400m" & score_metres_seconds < 50.00) %>%
summarise(avg_less_50s = round(mean(points), digits = 0)) %>%
pull(avg_less_50s)
decathlon %>%
filter(sport == "x400m" & score_metres_seconds > 50.00) %>%
summarise(avg_more_50s = round(mean(points), digits = 0)) %>%
pull(avg_more_50s)
library(tidyverse)
library(here)
library(janitor)
library(readr)
library(dplyr)
decathlon_raw <- read_rds(here("raw_data/decathlon.rds"))
View(decathlon_raw)
source("~/GitHub/dirty_data_codeclan_project_kirstyanderson/Task 1/data_cleaning_scripts/task1_cleaning_script.R", echo=TRUE)
# Load libraries
library(tidyverse)
library(here)
library(janitor)
library(readr)
--------------------------------------------------------------------------------
# Load Data
decathlon_raw <- read_rds(here("raw_data/decathlon.rds"))
decathlon_raw <- read_rds(here("raw_data/decathlon.rds"))
# Change row names to column called "athlete"
decathlon_clean <- rownames_to_column(decathlon_raw, "athlete")
# Change column headers to snake_case using janitor
decathlon_clean <- clean_names(decathlon_clean)
# Tidy data: convert to long format
decathlon_clean_long <- pivot_longer(decathlon_clean,
cols = "x100m":"x1500m",
names_to = "sport",
values_to = "score_metres_seconds")
# Tidy data: rearrange columns and sort by athlete
decathlon_clean_long <- decathlon_clean_long %>%
relocate(sport, .after = athlete) %>%
relocate(score_metres_seconds, .after = sport) %>%
relocate(competition, .after = sport)
decathlon_clean_long <- decathlon_clean_long %>%
arrange(athlete, sport,competition)
# Tidy data: check column types
head(decathlon_clean_long)
# The "competition" column is a factor type, will not convert it currently as it may be useful.
# Check for NA values
colSums(is.na(decathlon_clean_long))
# There are no NA values
# Make all data lower case - it appears that athletes are listed both uppercase and lowercase
decathlon_clean_long_lower <- decathlon_clean_long %>%
mutate_if(is.character, str_to_lower)
# Write cleaned data to csv
#write_csv(decathlon_clean_long_lower, "clean_data/decathlon_cleaned.csv")
View(decathlon_clean_long_lower)
View(decathlon_clean)
View(decathlon_clean_long_lower)
View(decathlon_clean_long_lower)
