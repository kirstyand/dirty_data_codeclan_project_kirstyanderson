"MEH" = 0)) %>%
relocate(num_rating, .after = rating)
# create a vector containing all possible gender categories, called "gender_option"
gender_option <- c("Female", "Male", NA)
# For each gender option, if it is not NA, then filter the df for the selected gender, summarise the total points for each candy and print the highest one
for (gender_cat in gender_option){
if (!is.na(gender_cat)){
max_candy <- candy_full %>%
filter(gender == gender_cat) %>%
group_by(candy) %>%
summarise(points = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(points)) %>%
head(1)
phrase <- paste("When gender was",gender_cat, "the top rated candy bar was",max_candy[1,1],"which scored",max_candy[1,2],"points")
print(phrase)
}
# if the gender is na, do the same thing but filter for gender is NA
else {
max_candy <- candy_full %>%
filter(is.na(gender)) %>%
group_by(candy) %>%
summarise(points = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(points)) %>%
head(1)
phrase <- paste("When gender was NA the top rated candy bar was",max_candy[1,1],"which scored",max_candy[1,2],"points")
print(phrase)
}}
candy_full %>%
group_by(year) %>%
summarise(points = sum(num_rating))
candy_full %>%
group_by(year) %>%
summarise(points = sum(num_rating, na.rm = TRUE))
candy_full %>%
filter(year == 2015) %>%
group_by(candy) %>%
summarise(total = sum(num_rating))
}
candy_full %>%
filter(year == 2015) %>%
group_by(candy) %>%
summarise(total = sum(num_rating))
candy_full %>%
filter(year == 2015) %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE))
candy_full %>%
filter(year == 2015) %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total))
candy_full %>%
filter(year == 2015) %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total)) %>%
head(1)
candy_full %>%
filter(year == 2016) %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total)) %>%
head(1)
candy_full %>%
filter(year == 2017) %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total)) %>%
head(1)
year_option <- c(2015, 2016, 2017)
for(year_cat in year_option){
max_year <- candy_full %>%
filter(year == year_cat) %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total)) %>%
head(1)
phrase <- paste("In",year_cat,"the most popular candy bar was '",max_year[1,1],"', which scored",max_year[1,2],"points.")
print(phrase)
year_option <- c(2015, 2016, 2017)
for(year_cat in year_option){
max_year <- candy_full %>%
filter(year == year_cat) %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total)) %>%
head(1)
phrase <- paste("In",year_cat,"the most popular candy bar was '",max_year[1,1],"', which scored",max_year[1,2],"points.")
print(phrase)
}
candy_full %>%
distinct(country)
country_list <- bind_15_16_17 %>%
select(country) %>%
filter(!is.na(country)) %>%
distinct()
View(country_list)
bind_15_16_17 <- bind_15_16_17 %>%
mutate(country = recode(country,
"'merica" = "usa",
"america" = "usa",
"i pretend to be from canada, but i am really from the united states." = "usa",
"n. america" = "usa",
"the best one - usa" = "usa",
"the united states" = "usa",
"the united states of america" = "usa",
"sub-canadian north america... 'merica" = "usa",
"the yoo ess of aaayyyyyy" = "usa",
"u s" = "usa",
"u s a" = "usa",
"u.s." = "usa",
"u.s.a" = "usa",
"u.s.a." = "usa",
"unhinged states" = "usa",
"unied states" = "usa",
"unite states" = "usa",
"united  states of america" = "usa",
"united sates" = "usa",
"united staes" = "usa",
"united state" = "usa",
"united statea" = "usa",
"united stated" = "usa",
"united states" = "usa",
"united states of america" = "usa",
"united statss" = "usa",
"united stetes" = "usa",
"united ststes" = "usa",
"unites states" = "usa",
"units states" = "usa",
"us" = "usa",
"us of a" = "usa",
"ussa"  = "usa")) %>%
relocate(country, .after = going_out) %>%
relocate(state, .after = country) %>%
relocate(gender, .after = age) %>%
relocate(year, .after = going_out)
country_list <- bind_15_16_17 %>%
select(country) %>%
filter(!is.na(country)) %>%
distinct()
View(country_list)
bind_15_16_17 <- bind_15_16_17 %>%
mutate(country = str_to_lower(country)) %>%
arrange(country)
bind_15_16_17 <- bind_15_16_17 %>%
mutate(country = recode(country,
"'merica" = "usa",
"america" = "usa",
"i pretend to be from canada, but i am really from the united states." = "usa",
"n. america" = "usa",
"the best one - usa" = "usa",
"the united states" = "usa",
"the united states of america" = "usa",
"sub-canadian north america... 'merica" = "usa",
"the yoo ess of aaayyyyyy" = "usa",
"u s" = "usa",
"u s a" = "usa",
"u.s." = "usa",
"u.s.a" = "usa",
"u.s.a." = "usa",
"unhinged states" = "usa",
"unied states" = "usa",
"unite states" = "usa",
"united  states of america" = "usa",
"united sates" = "usa",
"united staes" = "usa",
"united state" = "usa",
"united statea" = "usa",
"united stated" = "usa",
"united states" = "usa",
"united states of america" = "usa",
"united statss" = "usa",
"united stetes" = "usa",
"united ststes" = "usa",
"unites states" = "usa",
"units states" = "usa",
"us" = "usa",
"us of a" = "usa",
"ussa"  = "usa")) %>%
relocate(country, .after = going_out) %>%
relocate(state, .after = country) %>%
relocate(gender, .after = age) %>%
relocate(year, .after = going_out)
country_list <- bind_15_16_17 %>%
select(country) %>%
filter(!is.na(country)) %>%
distinct()
candy_clean_long <- pivot_longer(bind_15_16_17,
cols = c("butterfinger": "york_peppermint_patties",
"necco_wafers",
"sea_salt_flavored_stuff_probably_chocolate_since_this_is_the_it_flavor_of_the_year",
"bonkers_the_board_game":"whatchamacallit_bars",
"green_party_m_ms":"take_5"),
names_to = "candy",
values_to = "rating") %>%
relocate(candy, .after = state) %>%
relocate(rating, .after = candy)
candy_clean_long$age[!grepl("^-?[0-9]+(\\.[0-9]+)?$", candy_clean_long$age)] <- NA # search for strings that don't contain the pattern, replace these with NA
candy_clean_long$age <- as.numeric(candy_clean_long$age) #convert the column to numeric
candy_clean_long$age <- round(candy_clean_long$age, digits = 0) # round
candy_clean_long$age[sapply(candy_clean_long$age, is.infinite)] <- NA
View(candy_clean_long)
country_list <- candy_clean_long %>%
select(country) %>%
filter(!is.na(country)) %>%
distinct()
View(country_list)
write_csv(candy_clean_long, "clean_data/candy_cleaned.csv")
candy_full <- read_csv(here::here("clean_data/candy_cleaned.csv"))
candy_full %>%
distinct(country)
candy_full %>%
filter(country %in% "[usa]")
candy_full %>%
filter(country %in% "[usa]+")
candy_full %>%
filter(country == "usa")
#USA:
candy_full %>%
filter(country == "[usa]") %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total)) %>%
head(1)
candy_full %>%
filter(country == "[usa]")
max_year <- candy_full %>%
filter(year, grepl([usa]))
max_year <- candy_full %>%
filter(year, grepl("[usa]"))
country_option <- c(2015, 2016, 2017)
for(year_cat in year_option){
max_year <- candy_full %>%
filter(year == grepl("[usa]"))
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total)) %>%
head(1)
phrase <- paste("In",year_cat,"the most popular candy bar was '",max_year[1,1],"', which scored",max_year[1,2],"points.")
print(phrase)
}
max_year <- candy_full %>%
filter(grepl("[usa]", country))
View(max_year)
max_year <- candy_full %>%
str_subset(country, "usa")
library(stringr)
country_option <- c(2015, 2016, 2017)
for(year_cat in year_option){
max_year <- candy_full %>%
str_subset(country, "usa")
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total)) %>%
head(1)
phrase <- paste("In",year_cat,"the most popular candy bar was '",max_year[1,1],"', which scored",max_year[1,2],"points.")
print(phrase)
}
candy_full %>%
str_detect(country, "usa",)
candy_full %>%
str_detect(country, "usa")
candy_full %>%
filter(str_detect(country, "usa"))
candy_full %>%
filter(str_detect(country, "usa")) %>%
distinct(country)
candy_full %>%
filter(str_detect(country, "usa")) %>%
filter(!str_detect(country, "not")) %>%
distinct(country)
candy_full %>%
filter(str_detect(country, "usa")) %>%
filter(!str_detect(country, "not"))
#recode each rating to its new number, save this to a new column called "num_rating"
candy_full <- candy_full %>%
mutate(num_rating = recode(rating,
"JOY" = 1,
"DESPAIR" = -1,
"MEH" = 0)) %>%
relocate(num_rating, .after = rating)
candy_full %>%
filter(str_detect(country, "usa")) %>%
filter(!str_detect(country, "not")) %>%
group_by(candy) %>%
summarise(total = sum)
candy_full %>%
filter(str_detect(country, "usa")) %>%
filter(!str_detect(country, "not")) %>%
group_by(candy) %>%
summarise(total = sum(num_rating))
candy_full %>%
filter(str_detect(country, "usa")) %>%
filter(!str_detect(country, "not")) %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE))
candy_full %>%
filter(str_detect(country, "usa")) %>%
filter(!str_detect(country, "not")) %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total))
candy_full %>%
distinct(country)
candy_full %>%
filter(str_detect(country, "uk"|"kingdom"|"scotland"|"ireland"|"england"|"wales" ))
# UK:
candy_full %>%
filter(str_detect(country, "uk|kingdom|scotland|ireland|england|wales" )) %>%
filter(!str_detect(country, "not")) %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total))
candy_full %>%
filter(str_detect(country, "uk|kingdom|scotland|ireland|england|wales" ))
candy_full %>%
filter(str_detect(country, "uk|kingdom|scotland|ireland|england|wales" )) %>%
distinct(country)
candy_full %>%
filter(str_detect(country, "uk|u.k.|united|kingdom|scotland|ireland|england|wales" )) %>%
filter(!str_detect(country, "not|sates")) %>%
distinct(country)
candy_full %>%
filter(str_detect(country, "uk|u.k.|united|kingdom|scotland|ireland|england|wales" )) %>%
filter(!str_detect(country, "not|states")) %>%
distinct(country)
candy_full %>%
filter(str_detect(country, "uk|u.k.|united|kingdom|scotland|ireland|england|wales" ))
candy_full %>%
filter(str_detect(country, "uk|u.k.|united|kingdom|scotland|ireland|england|wales" )) %>%
#filter(!str_detect(country, "not|states")) %>%
distinct(country)
candy_full %>%
filter(str_detect(country, "uk|u.k.|united|kingdom|scotland|ireland|england|wales" )) %>%
filter(!str_detect(country, "not|states|soviet")) %>%
distinct(country)
# UK: check filter:
candy_full %>%
filter(str_detect(country, "uk|u.k.|united|kingdom|scotland|ireland|england|wales" )) %>%
filter(!str_detect(country, "not|states|soviet")) %>%
distinct(country)
candy_full %>%
filter(str_detect(country, "uk|u.k.|united|kingdom|scotland|ireland|england|wales" )) %>%
filter(!str_detect(country, "not|states|soviet")) %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total))
candy_full %>%
filter(str_detect(country, "cana" ))
candy_full %>%
filter(str_detect(country, "cana" )) %>%
# filter(!str_detect(country, "not|states|soviet")) %>%
distinct(country)
candy_full %>%
filter(str_detect(country, "canada" )) %>%
filter(!str_detect(country, "not")) %>%
distinct(country)
# Canada: check filter:
candy_full %>%
filter(str_detect(country, "canada" )) %>%
filter(!str_detect(country, "not")) %>%
distinct(country)
candy_full %>%
filter(str_detect(country, "canada" )) %>%
filter(!str_detect(country, "not")) %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total))
# all other countries
candy_full %>%
filter(!str_detect(country, "canada|uk|u.k.|united|kingdom|scotland|ireland|england|wales|usa" )) %>%
distinct(country)
# all other countries
candy_full %>%
filter(!str_detect(country, "canada|uk|u.k.|united|kingdom|scotland|ireland|england|wales|usa" )) %>%
distinct(country)
candy_full %>%
filter(!str_detect(country, "canada|uk|u.k.|united|kingdom|scotland|ireland|england|wales|usa" )) %>%
group_by(candy) %>%
summarise(total = sum(num_rating, na.rm = TRUE)) %>%
arrange(desc(total))
candy_full %>%
group_by(rating) %>%
count(candy)
candy_full %>%
group_by(rating) %>%
count(rating_count) %>%
arrange(desc(rating_count))
candy_full %>%
group_by(rating) %>%
count(candy) %>%
arrange(desc(n)
candy_full %>%
group_by(rating) %>%
count(candy) %>%
arrange(desc(n))
candy_full %>%
group_by(candy) %>%
count(rating)
candy_full %>%
group_by(candy) %>%
count(rating, na.rm = TRUE)
candy_full %>%
group_by(candy) %>%
count(rating)
candy_full %>%
group_by(candy) %>%
count(rating) %>%
group_by(rating)
candy_full %>%
group_by(candy) %>%
count(rating) %>%
group_by(rating) %>%
summarise(max(n))
candy_full %>%
group_by(candy) %>%
count(rating) %>%
group_by(rating) %>%
summarise(max(n))
# Get the average 100m time in each competition
decathlon %>%
filter(sport == "x100m") %>%
group_by(competition) %>%
summarise(average_100m = round(mean(score_metres_seconds), digits =2))
candy_full %>%
filter(rating = "JOY")
candy_full %>%
filter(rating == "JOY")
candy_full %>%
filter(rating == "JOY") %>%
count(candy)
candy_full %>%
filter(rating == "JOY") %>%
count(candy) %>%
arrange(desc(n))
candy_full %>%
filter(rating == "JOY") %>%
count(candy) %>%
arrange(desc(n))
candy_full %>%
filter(rating == "DESPAIR") %>%
count(candy) %>%
arrange(desc(n))
candy_full %>%
filter(rating == "JOY") %>%
count(candy) %>%
arrange(desc(n))
candy_full %>%
filter(rating == "DESPAIR") %>%
count(candy) %>%
arrange(desc(n))
candy_full %>%
filter(rating == "MEH") %>%
count(candy) %>%
arrange(desc(n))
rating_options <- c("JOY", "DESPAIR", "MEH")
for (vote in rating_options)
max_candy <-  candy_full %>%
filter(rating == vote) %>%
count(candy) %>%
arrange(desc(n)) %>%
head(1)
paste("The candy bar",max_candy[1,2],"received the most",max_candy[1,1],"ratings")
rating_options <- c("JOY", "DESPAIR", "MEH")
for (vote in rating_options){
max_candy <-  candy_full %>%
filter(rating == vote) %>%
count(candy) %>%
arrange(desc(n)) %>%
head(1)
paste("The candy bar",max_candy[1,2],"received the most",max_candy[1,1],"ratings")
}
rating_options <- c("JOY", "DESPAIR", "MEH")
for (vote in rating_options){
max_candy <-  candy_full %>%
filter(rating == vote) %>%
count(candy) %>%
arrange(desc(n)) %>%
head(1)
phrase <- paste("The candy bar",max_candy[1,2],"received the most",max_candy[1,1],"ratings")
print(phrase)
}
rating_options <- c("JOY", "DESPAIR", "MEH")
for (vote in rating_options){
max_candy <-  candy_full %>%
filter(rating == vote) %>%
count(candy) %>%
arrange(desc(n)) %>%
head(1)
phrase <- paste("The candy bar",max_candy[1,1],"received the most",vote,"ratings, with",max_candy[1,2],"ratings.")
print(phrase)
}
rating_options <- c("JOY", "DESPAIR", "MEH")
for (vote in rating_options){
max_candy <-  candy_full %>%
filter(rating == vote) %>%
count(candy) %>%
arrange(desc(n)) %>%
head(1)
phrase <- paste("The candy bar '",max_candy[1,1],"' received the most",vote,"ratings, with",max_candy[1,2],"ratings.")
print(phrase)
}
rating_options <- c("JOY", "DESPAIR", "MEH")
for (vote in rating_options){
max_candy <-  candy_full %>%
filter(rating == vote) %>%
count(candy) %>%
arrange(desc(n)) %>%
head(1)
phrase <- paste("The candy '",max_candy[1,1],"' received the most",vote,"ratings, with",max_candy[1,2],"ratings.")
print(phrase)
}
